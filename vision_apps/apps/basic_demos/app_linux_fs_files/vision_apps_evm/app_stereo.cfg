# location of input image (*.bmp) files
# input image path for left camera images is ${APP_STEREO_DATA_PATH}/<left_img_file_path>
# input image path for right camera images is ${APP_STEREO_DATA_PATH}/<right_img_file_path>
left_img_file_path Stereo0001/left
right_img_file_path Stereo0001/right

# location of output *.bmp files
# output image path is construced as ${APP_STEREO_DATA_PATH}/<output_file_path>
output_file_path Stereo0001/output

# filename prefix, output file name is constructed as
# <filename prefix>_disparity_ddddd.bmp, <filename prefix>_conf_ddddd.bmp
# e.g. tisde_disparity_00000.bmp, tisde_conf_00000.bmp
output_file_prefix out

# first file number to pick as input
start_seq 1

# last file number to pick as input
end_seq 263 

# input data width in pixels
width 1280

# input data height in lines
height 720

# input bit depth <8 or 16>
bit_depth 8

# confidence value for visualization <0 ~ 7>
# the disparity whose confidence is < vis_confidence will be removed
visualize_confidence 1

# <0 or 1>, disable/enable histogram output
hist_output 1

# <0 or 1>, disable/enable .sde output
sde_output  0

# SDE params

# <0 or 1>, disable/enable post-processing 5x5 median filter
median_filter_enable 1

# <0 or 1>, disable/enable reduced range search on pixels near right margin
reduced_range_search_enable 0

# minimum disparity (0 -> 0 pixels, 1 -> -3 pixels)
disparity_min 0

# maximum disparity (0 -> 63 pixels, 1 -> 127 pixels, 2 -> 191 pixels)
disparity_max 0

# <0 - 255>, left-right consistency check threshold in pixels
threshold_left_right 3

# <0 or 1>, disable/enable texture based filtering
texture_filter_enable 0

# <0 - 255>, scaled threshold for texture based filtering
threshold_texture 100

# <0 - 127>, Optimization penalty constant for smalle disparity change
aggregation_penalty_p1 32

# <0 - 192>, Optimization penalty constant for large disparity change
aggregation_penalty_p2 192

# <0 - 127> confidence_score_map[7] array configuation
# To map the confidence values between 0 ~ 127 to 0 ~ 7,
# We need to specifiy 7 values in the increasing order as follows:
# confidence_score_map_0, confidence_score_map_1, ..., confidence_score_map_5, confidence_score_map_6.
#
# confidence values, c will be map to 0 ~ 7 as follows:
#                          c <= confidence_score_map_0 -> 0
# confidence_score_map_0 < c <= confidence_score_map_1 -> 1
# confidence_score_map_1 < c <= confidence_score_map_2 -> 2
# confidence_score_map_2 < c <= confidence_score_map_3 -> 3
# confidence_score_map_3 < c <= confidence_score_map_4 -> 4
# confidence_score_map_4 < c <= confidence_score_map_5 -> 5
# confidence_score_map_5 < c <= confidence_score_map_6 -> 6
# confidence_score_map_6 < c                           -> 7

# User can specify confidence_score_map_0 ~ confidence_score_map_6
# Should make sure that 
# confidence_score_map_0 >= 0
# confidence_score_map_6 <= 127 
confidence_score_map_0 0
confidence_score_map_1 1
confidence_score_map_2 2
confidence_score_map_3 3
confidence_score_map_4 5
confidence_score_map_5 9
confidence_score_map_6 14 


# 0: stop demo when all images are processed, 1: keep processing images in loop with a interactive menu to stop
is_interactive 1

# 0: No display, 1: enable visualization on display
display_option 1

# number of iterations to loop through the demo
num_iterations 10000000
