/*
 *
 * Copyright (c) 2018 Texas Instruments Incorporated
 *
 * All rights reserved not granted herein.
 *
 * Limited License.
 *
 * Texas Instruments Incorporated grants a world-wide, royalty-free, non-exclusive
 * license under copyrights and patents it now or hereafter owns or controls to make,
 * have made, use, import, offer to sell and sell ("Utilize") this software subject to the
 * terms herein.  With respect to the foregoing patent license, such license is granted
 * solely to the extent that any such patent is necessary to Utilize the software alone.
 * The patent license shall not apply to any combinations which include this software,
 * other than combinations with devices manufactured by or for TI ("TI Devices").
 * No hardware patent is licensed hereunder.
 *
 * Redistributions must preserve existing copyright notices and reproduce this license
 * (including the above copyright notice and the disclaimer and (if applicable) source
 * code license limitations below) in the documentation and/or other materials provided
 * with the distribution
 *
 * Redistribution and use in binary form, without modification, are permitted provided
 * that the following conditions are met:
 *
 * *       No reverse engineering, decompilation, or disassembly of this software is
 * permitted with respect to any software provided in binary form.
 *
 * *       any redistribution and use are licensed by TI for use only with TI Devices.
 *
 * *       Nothing shall obligate TI to provide you with source code for the software
 * licensed and provided to you in object code.
 *
 * If software source code is provided to you, modification and redistribution of the
 * source code are permitted provided that the following conditions are met:
 *
 * *       any redistribution and use of the source code, including any resulting derivative
 * works, are licensed by TI for use only with TI Devices.
 *
 * *       any redistribution and use of any object code compiled from the source code
 * and any resulting derivative works, are licensed by TI for use only with TI Devices.
 *
 * Neither the name of Texas Instruments Incorporated nor the names of its suppliers
 *
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * DISCLAIMER.
 *
 * THIS SOFTWARE IS PROVIDED BY TI AND TI'S LICENSORS "AS IS" AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL TI AND TI'S LICENSORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/* BIOS config common across all cores */

var Task        = xdc.useModule("ti.sysbios.knl.Task");
var Idle        = xdc.useModule("ti.sysbios.knl.Idle");
var BIOS        = xdc.useModule("ti.sysbios.BIOS");
var Startup     = xdc.useModule("xdc.runtime.Startup");
var SysStd      = xdc.useModule("xdc.runtime.SysStd");
var System      = xdc.useModule("xdc.runtime.System");
var Log         = xdc.useModule("xdc.runtime.Log");
var Assert      = xdc.useModule("xdc.runtime.Assert");
var Program     = xdc.useModule("xdc.cfg.Program");
var Main        = xdc.useModule("xdc.runtime.Main");
var Memory      = xdc.useModule("xdc.runtime.Memory");
var Diags       = xdc.useModule("xdc.runtime.Diags");
var Semaphore   = xdc.useModule("ti.sysbios.knl.Semaphore");
var HeapMem     = xdc.useModule("ti.sysbios.heaps.HeapMem");
var HeapBuf     = xdc.useModule("ti.sysbios.heaps.HeapBuf");
var Clock       = xdc.useModule("ti.sysbios.knl.Clock");
var Timestamp   = xdc.useModule("xdc.runtime.Timestamp");
var Load        = xdc.useModule('ti.sysbios.utils.Load');
var Hwi         = xdc.useModule('ti.sysbios.hal.Hwi');
var Queue       = xdc.useModule('ti.sysbios.knl.Queue');
var SyncSem     = xdc.useModule('ti.sysbios.syncs.SyncSem');
var Cache       = xdc.useModule('ti.sysbios.hal.Cache');
var halCore     = xdc.useModule('ti.sysbios.hal.Core');
var GateH       = xdc.useModule('xdc.runtime.knl.GateH');
var Event       = xdc.useModule('ti.sysbios.knl.Event');
var biosGates   = xdc.useModule('ti.sysbios.gates.GateTask');
var Defaults    = xdc.useModule('xdc.runtime.Defaults');
var Error       = xdc.useModule('xdc.runtime.Error');
var Registry    = xdc.useModule('xdc.runtime.Registry');
var HeapBuf     = xdc.useModule('ti.sysbios.heaps.HeapBuf');
var GateSwi     = xdc.useModule('ti.sysbios.gates.GateSwi');
var Timer       = xdc.useModule('ti.sysbios.hal.Timer');
var Idle        = xdc.useModule ('ti.sysbios.knl.Idle');

/* BIOS library type, same setting is used by IPC as well */
BIOS.libType = BIOS.LibType_Custom;

/* Clock tick in microseconds */
Clock.tickPeriod    = 1000;

/* Stack size when NULL is passed as stack during TSK create    */
Task.defaultStackSize   = 16*1024;

Idle.addFunc('&appIdleLoop');
Task.enableIdleTask = true;

/* Below flags enable or disable stack overflow check for Hwi and Task */
Task.checkStackFlag = true;
Hwi.checkStackFlag = false;

/* malloc heap size */
Memory.defaultHeapSize = 256*1024;

/* Set the proxy for System module.
 * This enables print statements at runtime in the application
 */
System.SupportProxy = SysStd;


